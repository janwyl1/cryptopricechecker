import React from 'react';
// import {render} from 'react-test-renderer'; // renders react components to pure JS objects
import ReactDOM from 'react-dom';
import { act } from "react-dom/test-utils";
import { Table } from './Table';
import { MarketCapChart, PriceChart, GainersChart, LosersChart } from './Chart'
import App from './App';
import { render, fireEvent, queryBy } from '@testing-library/react'
import '@testing-library/jest-dom/extend-expect'
import fetch from "jest-fetch-mock"

const dummyData = [{
    "ticker": "BTC",
    "name": "Bitcoin",
    "price": 6949.36,
    "changes": -4.34,
    "marketCapitalization": 125553000000
}, {
    "ticker": "ETH",
    "name": "Ethereum",
    "price": 143.832,
    "changes": -4.59,
    "marketCapitalization": 15632800000
}, {
    "ticker": "XRP",
    "name": "Ripple",
    "price": 0.218592,
    "changes": -5.92,
    "marketCapitalization": 9464990000
}, {
    "ticker": "BCH",
    "name": "Bitcoin Cash",
    "price": 208.878,
    "changes": -1.68,
    "marketCapitalization": 3787430000
}, {
    "ticker": "EOS",
    "name": "EOS",
    "price": 2.52705,
    "changes": -4.96,
    "marketCapitalization": 2379600000
}, {
    "ticker": "LTC",
    "name": "Litecoin",
    "price": 45.6556,
    "changes": -4.14,
    "marketCapitalization": 2908490000
}];

/**
    Snapshot Tests - unit tests with an autogenerated assumption about a component
*/
describe('Charts render correctly', () => {
    test('Market Cap matches snapshot', () => {
        const { container, getByText, getAllByRole } = render(<MarketCapChart currencies={dummyData} />)
        expect(getByText('Top 10 Cryptos by Market Cap')).toBeInTheDocument()
        expect(container).toMatchSnapshot();
    });

    test('Price Chart matches snapshot', () => {
        const { container, getByText, getAllByRole } = render(<PriceChart currencies={dummyData} />)
        expect(getByText('Top 10 Cryptos by Price (USD)')).toBeInTheDocument()
        expect(container).toMatchSnapshot();
    });
    test('Gainers Chart matches snapshot', () => {
        const { container, getByText, getAllByRole } = render(<GainersChart currencies={dummyData} />)
        expect(getByText('Top 10 Gainers by % Increase')).toBeInTheDocument()
        expect(container).toMatchSnapshot();
    });

    test('Losers Chart matches snapshot', () => {
        const { container, getByText, getAllByRole } = render(<LosersChart currencies={dummyData} />)
        expect(getByText('Top 10 Losers by % Decrease')).toBeInTheDocument()
        expect(container).toMatchSnapshot();
    });
})
describe('Table renders correctly', () => {
    test('Table matches snapshot', () => {
        const { getAllByRole, container, getByText } = render(<Table currencies={dummyData} />)
        expect(getByText('Ticker')).toBeInTheDocument()
        const theads = getAllByRole('columnheader')
        expect(theads).toHaveLength(6);
        expect(container).toMatchSnapshot();
    });
})


/**
    Functional Tests - testing the DOM nodes / interacting + finding elements by text as a user would. 
*/
describe('Table passes functional tests', () => {
    test('Sorts by price when <th> clicked', () => {
        const { getByText, getAllByRole } = render(<Table currencies={dummyData} />)
        let tdata = getAllByRole('cell');
        expect(tdata[1].textContent).toBe("Bitcoin");
        expect(tdata[2].textContent).toBe("BTC");
        expect(tdata[3].textContent).toBe("$6949.36");
        expect(tdata[4].textContent).toBe("-4.34%");
        expect(tdata[5].textContent).toBe("$125.55b");
        /* Click <th>Price</th> once */
        act(() => {
            fireEvent.click(getByText('Price')) 
        })
        tdata = getAllByRole('cell');
        expect(tdata[1].textContent).toBe("Ripple");
        expect(tdata[2].textContent).toBe("XRP")
        expect(tdata[3].textContent).toContain("$0.22")
        expect(tdata[4].textContent).toContain("-5.92%")
        expect(tdata[5].textContent).toContain("$9.46b")
        /* Click <th>Price</th> 5 times */
        act(() => {
            for(let i=0; i<5; i++) {
              fireEvent.click(getByText('Price'))
            }
        })
        tdata = getAllByRole('cell');
        expect(tdata[1].textContent).toBe("Bitcoin");
        expect(tdata[2].textContent).toBe("BTC");
        expect(tdata[3].textContent).toBe("$6949.36");
        expect(tdata[4].textContent).toBe("-4.34%");
        expect(tdata[5].textContent).toBe("$125.55b");
    })
})